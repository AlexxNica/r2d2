var searchIndex = {};
searchIndex['r2d2'] = {"items":[[0,"","r2d2","A library providing a generic connection pool."],[3,"Config","","A struct specifying the runtime configuration of a pool."],[12,"pool_size","","The number of connections managed by the pool.",0],[12,"helper_threads","","The number of threads that the pool will use for asynchronous\noperations such as connection creation and health checks.",0],[12,"test_on_check_out","","If true, the health of a connection will be verified via a call to\n`ConnectionManager::is_valid` before it is checked out of the pool.",0],[12,"initialization_fail_fast","","If true, `Pool::new` will synchronously initialize its connections,\nreturning an error if they could not be created.",0],[12,"connection_timeout","","Calls to `Pool::get` will wait this long for a connection to become\navailable before returning an error.",0],[3,"NoopErrorHandler","","An `ErrorHandler` which does nothing."],[3,"LoggingErrorHandler","","An `ErrorHandler` which logs at the error level."],[3,"Pool","","A generic connection pool."],[3,"InitializationError","","An error returned by `Pool::new` if it fails to initialize connections."],[3,"GetTimeout","","An error returned by `Pool::get` if it times out without retrieving a connection."],[3,"PooledConnection","","A smart pointer wrapping a connection."],[4,"ConfigError","","An enumeration of reasons that a `Config` is invalid"],[13,"ZeroPoolSize","","pool_size was zero",1],[13,"ZeroHelperThreads","","helper_threads was zero",1],[13,"NonPositiveConnectionTimeout","","connection_timeout was not positive",1],[11,"fmt","","",0],[11,"clone","","",0],[11,"default","","",0],[11,"validate","","Determines if the configuration is valid",0],[11,"fmt","","",1],[11,"eq","","",1],[11,"ne","","",1],[11,"clone","","",1],[11,"fmt","","",1],[11,"description","","",1],[8,"ConnectionManager","","A trait which provides connection-specific functionality."],[16,"Connection","r2d2::ConnectionManager",""],[16,"Error","",""],[10,"connect","r2d2","Attempts to create a new connection.",2],[10,"is_valid","","Determines if the connection is still connected to the database.",2],[10,"has_broken","","*Quickly* determines if the connection is no longer usable.",2],[8,"ErrorHandler","","A trait which handles errors reported by the `ConnectionManager`."],[10,"handle_error","","Handles an error.",3],[11,"fmt","","",4],[11,"clone","","",4],[11,"handle_error","","",4],[11,"fmt","","",5],[11,"clone","","",5],[11,"handle_error","","",5],[11,"drop","","",6],[11,"fmt","","",6],[11,"fmt","","",7],[11,"fmt","","",7],[11,"description","","",7],[11,"fmt","","",8],[11,"fmt","","",8],[11,"description","","",8],[11,"new","","Creates a new connection pool.",6],[11,"get","","Retrieves a connection from the pool.",6],[11,"fmt","","",9],[11,"drop","","",9],[6,"Target","",""],[11,"deref","","",9],[11,"deref_mut","","",9]],"paths":[[3,"Config"],[4,"ConfigError"],[8,"ConnectionManager"],[8,"ErrorHandler"],[3,"NoopErrorHandler"],[3,"LoggingErrorHandler"],[3,"Pool"],[3,"InitializationError"],[3,"GetTimeout"],[3,"PooledConnection"]]};
initSearch(searchIndex);
