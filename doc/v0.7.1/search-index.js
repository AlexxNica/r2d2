var searchIndex = {};
searchIndex["r2d2"] = {"doc":"A generic connection pool.","items":[[3,"Config","r2d2","A struct specifying the runtime configuration of a pool.",null,null],[3,"NopErrorHandler","","A `HandleError` implementation which does nothing.",null,null],[3,"LoggingErrorHandler","","A `HandleError` implementation which logs at the error level.",null,null],[3,"NopConnectionCustomizer","","A `CustomizeConnection` which does nothing.",null,null],[3,"Pool","","A generic connection pool.",null,null],[3,"InitializationError","","An error returned by `Pool::new` if it fails to initialize connections.",null,null],[3,"GetTimeout","","An error returned by `Pool::get` if it times out without retrieving a connection.",null,null],[3,"State","","Information about the state of a `Pool`.",null,null],[12,"connections","","The number of connections currently being managed by the pool.",0,null],[12,"idle_connections","","The number of idle connections.",0,null],[3,"PooledConnection","","A smart pointer wrapping a connection.",null,null],[0,"config","","Pool configuration.",null,null],[3,"Builder","r2d2::config","A builder for `Config`.",null,null],[3,"Config","","A struct specifying the runtime configuration of a pool.",null,null],[11,"fmt","","",1,null],[11,"new","","Constructs a new `Builder`.",1,{"inputs":[],"output":{"name":"builder"}}],[11,"pool_size","","Sets `pool_size`.",1,null],[11,"min_idle","","Sets `min_idle`.",1,null],[11,"helper_threads","","Sets `helper_threads`.",1,null],[11,"test_on_check_out","","Sets `test_on_check_out`.",1,null],[11,"initialization_fail_fast","","Sets `initialization_fail_fast`.",1,null],[11,"max_lifetime","","Sets `max_lifetime`.",1,null],[11,"idle_timeout","","Sets `idle_timeout`.",1,null],[11,"connection_timeout","","Sets `connection_timeout` to the specified duration.",1,null],[11,"error_handler","","Sets the `error_handler`.",1,null],[11,"connection_customizer","","Sets the `connection_customizer`.",1,null],[11,"build","","Consumes the `Builder`, turning it into a `Config`.",1,null],[11,"fmt","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"config"}}],[11,"builder","","Creates a new `Builder` which can be used to construct a customized\n`Config`.",2,{"inputs":[],"output":{"name":"builder"}}],[11,"pool_size","","The maximum number of connections managed by the pool.",2,null],[11,"min_idle","","If set, the pool will try to maintain at least this many idle\nconnections at all times, while respecting the value of `pool_size`.",2,null],[11,"helper_threads","","The number of threads that the pool will use for asynchronous\noperations such as connection creation and health checks.",2,null],[11,"test_on_check_out","","If true, the health of a connection will be verified via a call to\n`ConnectionManager::is_valid` before it is checked out of the pool.",2,null],[11,"initialization_fail_fast","","If true, `Pool::new` will synchronously initialize its connections,\nreturning an error if they could not be created.",2,null],[11,"idle_timeout","","If set, connections will be closed after sitting idle for at most 30\nseconds beyond this duration.",2,null],[11,"max_lifetime","","If set, connections will be closed after existing for at most 30 seconds\nbeyond this duration. If a connection reaches its maximum lifetime while\nchecked out it will be closed when it is returned to the pool.",2,null],[11,"connection_timeout","","Calls to `Pool::get` will wait this long for a connection to become\navailable before returning an error.",2,null],[11,"error_handler","","The handler for error reported in the pool.",2,null],[11,"connection_customizer","","The connection customizer used by the pool.",2,null],[8,"ManageConnection","r2d2","A trait which provides connection-specific functionality.",null,null],[16,"Connection","","The connection type this manager deals with.",3,null],[16,"Error","","The error type returned by `Connection`s.",3,null],[10,"connect","","Attempts to create a new connection.",3,null],[10,"is_valid","","Determines if the connection is still connected to the database.",3,null],[10,"has_broken","","*Quickly* determines if the connection is no longer usable.",3,null],[8,"HandleError","","A trait which handles errors reported by the `ManageConnection`.",null,null],[10,"handle_error","","Handles an error.",4,null],[8,"CustomizeConnection","","A trait which allows for customization of connections.",null,null],[11,"on_acquire","","Called with connections immediately after they are returned from\n`ManageConnection::connect`.",5,null],[11,"fmt","","",6,null],[11,"clone","","",6,null],[11,"handle_error","","",6,null],[11,"fmt","","",7,null],[11,"clone","","",7,null],[11,"handle_error","","",7,null],[11,"fmt","","",8,null],[11,"clone","","",8,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"new","","Creates a new connection pool.",9,{"inputs":[{"name":"config"},{"name":"m"}],"output":{"name":"result"}}],[11,"state","","Returns information about the current state of the pool.",9,null],[11,"config","","Returns the pool&#39;s configuration.",9,null],[11,"get","","Retrieves a connection from the pool.",9,null],[11,"fmt","","",10,null],[11,"fmt","","",10,null],[11,"description","","",10,null],[11,"fmt","","",11,null],[11,"fmt","","",11,null],[11,"description","","",11,null],[11,"fmt","","",0,null],[11,"fmt","","",12,null],[11,"drop","","",12,null],[11,"deref","","",12,null],[11,"deref_mut","","",12,null]],"paths":[[3,"State"],[3,"Builder"],[3,"Config"],[8,"ManageConnection"],[8,"HandleError"],[8,"CustomizeConnection"],[3,"NopErrorHandler"],[3,"LoggingErrorHandler"],[3,"NopConnectionCustomizer"],[3,"Pool"],[3,"InitializationError"],[3,"GetTimeout"],[3,"PooledConnection"]]};
initSearch(searchIndex);
